---
# Role to install nprometheusode_exporter 

- name: create prometheus data directory
  file:
    path: "{{ prometheus_db_dir }}"
    state: directory

- name: create prometheus configuration directories
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ prometheus_config_dir }}"
    - "{{ prometheus_config_dir }}/conf.d"
    - "{{ prometheus_config_dir }}/rules"
    - "{{ prometheus_config_dir }}/file_sd"

- name: download prometheus binary to local folder
  become: false
  get_url:
    url: "https://github.com/prometheus/prometheus/releases/download/v{{ prometheus_version }}/prometheus-{{ prometheus_version }}.linux-{{ go_arch_map[ansible_architecture] | default(ansible_architecture) }}.tar.gz"
    dest: "/tmp/prometheus-{{ prometheus_version }}.linux-{{ go_arch_map[ansible_architecture] | default(ansible_architecture) }}.tar.gz"
  register: _download_archive
  until: _download_archive is succeeded
  retries: 5
  delay: 2
  delegate_to: localhost
  check_mode: false

- name: unpack prometheus binaries
  become: false
  unarchive:
    src: "/tmp/prometheus-{{ prometheus_version }}.linux-{{ go_arch_map[ansible_architecture] | default(ansible_architecture) }}.tar.gz"
    dest: "/tmp"
    creates: "/tmp/prometheus-{{ prometheus_version }}.linux-{{ go_arch_map[ansible_architecture] | default(ansible_architecture) }}/prometheus"
  delegate_to: localhost
  check_mode: false

- name: propagate prometheus and promtool binaries
  copy:
    src: "/tmp/prometheus-{{ prometheus_version }}.linux-{{ go_arch_map[ansible_architecture] | default(ansible_architecture) }}/{{ item }}"
    dest: "/usr/local/bin/{{ item }}"
    mode: 0755
    owner: root
    group: root
  with_items:
    - prometheus
    - promtool

- name: remove prometheus binaries from old location
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - /opt/prometheus/prometheus
    - /opt/prometheus/promtool
    - /opt/prometheus

- name: propagate console templates and config file
  copy:
    src: "/tmp/prometheus-{{ prometheus_version }}.linux-{{ go_arch_map[ansible_architecture] | default(ansible_architecture) }}/{{ item }}/"
    dest: "{{ prometheus_config_dir }}/{{ item }}/"
    mode: 0755
    owner: root
    group: root
  with_items:
    - console_libraries
    - consoles

- name: propagate config file
  copy:
    src: "/tmp/prometheus-{{ prometheus_version }}.linux-{{ go_arch_map[ansible_architecture] | default(ansible_architecture) }}/{{ item }}/"
    dest: "{{ prometheus_config_dir }}/{{ item }}"
    mode: 0755
    owner: root
    group: root
  with_items:
    - prometheus.yml

- name: create systemd service unit
  template:
    src: prometheus.service.j2
    dest: /etc/systemd/system/prometheus.service
    owner: root
    group: root
    mode: 0644

- name: Uncomment alertmanager configuration
  lineinfile:
    path: /etc/prometheus/prometheus.yml  # Replace with the actual path to your configuration file
    regexp: '^(\s*)#?(\s*)- alertmanager:9093'
    line: '       - alertmanager:9093'
    backrefs: yes

- name: update alertmanager configuration
  replace:
    path: /etc/prometheus/prometheus.yml  # Replace with the actual path to your Prometheus configuration file
    regexp: '^       - alertmanager:9093$'
    replace: '       - localhost:9093'

- name: Add grafana-metrics job to Prometheus configuration
  lineinfile:
    path: /etc/prometheus/prometheus.yml  # Replace with the actual path to your Prometheus configuration file
    line: "  - job_name: grafana-metrics\n    static_configs:\n      - targets: [\"localhost:9100\"]"
    insertafter: '^scrape_configs:'

- name: Add elk-agent-metrics job to Prometheus configuration
  lineinfile:
    path: /etc/prometheus/prometheus.yml  # Replace with the actual path to your Prometheus configuration file
    line: "  - job_name: elk-agent-metrics\n    static_configs:\n      - targets: [\"localhost:9100\"]"
    insertafter: '^scrape_configs:'

- name: Add Appnode-metrics job to Prometheus configuration
  lineinfile:
    path: /etc/prometheus/prometheus.yml  # Replace with the actual path to your Prometheus configuration file
    line: "  - job_name: node-exporter\n    static_configs:\n      - targets: [\"13.40.83.242:9100\"]"
    insertafter: '^scrape_configs:'

- name: Permit Traffic on Port 9090/tcp
  firewalld:
    port: 9090/tcp
    permanent: true
    state: enabled
  when: (ansible_facts['distribution'] == "RedHat" and ansible_facts['distribution_major_version'] == "8")

- name: Starting Prometheus as a service
  service:
   name: prometheus
   state: started
   enabled: yes
