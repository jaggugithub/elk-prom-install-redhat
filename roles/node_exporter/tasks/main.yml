---
# Role to install node_exporter

- name: Download node_exporter binary to local folder
  become: false
  get_url:
    url: "https://github.com/prometheus/node_exporter/releases/download/v{{ node_exporter_version }}/node_exporter-{{ node_exporter_version }}.linux-{{ go_arch_map[ansible_architecture] | default(ansible_architecture) }}.tar.gz"
    dest: "/tmp/node_exporter-{{ node_exporter_version }}.linux-{{ go_arch_map[ansible_architecture] | default(ansible_architecture) }}.tar.gz"
  register: _download_binary
  until: _download_binary is succeeded
  retries: 5
  delay: 2
  delegate_to: localhost
  check_mode: false

- name: Unpack node_exporter binary
  become: false
  unarchive:
    src: "/tmp/node_exporter-{{ node_exporter_version }}.linux-{{ go_arch_map[ansible_architecture] | default(ansible_architecture) }}.tar.gz"
    dest: "/tmp"
    creates: "/tmp/node_exporter-{{ node_exporter_version }}.linux-{{ go_arch_map[ansible_architecture] | default(ansible_architecture) }}/node_exporter"
  delegate_to: localhost
  check_mode: false

- name: Create /usr/local/bin
  file:
    path: /usr/local/bin
    state: directory
    mode: 0755

- name: Propagate node_exporter binaries
  copy:
    src: "/tmp/node_exporter-{{ node_exporter_version }}.linux-{{ go_arch_map[ansible_architecture] | default(ansible_architecture) }}/node_exporter"
    dest: "/usr/local/bin/node_exporter"
    mode: 0750
    # owner: "{{ node_exporter_system_user }}"
    # group: "{{ node_exporter_system_group }}"

- name: Copy the Node Exporter systemd service file
  template:
    src: node-exporter.service.j2
    dest: /etc/systemd/system/node-exporter.service
    owner: root
    group: root
    mode: 0644

- name: Permit Traffic on Port 9100/tcp
  firewalld:
    port: 9100/tcp
    permanent: true
    state: enabled
  when: (ansible_facts['distribution'] == "RedHat" and ansible_facts['distribution_major_version'] == "8")

- name: Starting node-exporter as a service
  service:
   name: node-exporter
   state: started
   enabled: yes
